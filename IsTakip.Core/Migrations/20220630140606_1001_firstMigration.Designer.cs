// <auto-generated />
using System;
using IsTakip.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IsTakip.Core.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220630140606_1001_firstMigration")]
    partial class _1001_firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IsTakip.Core.Classes.AjandaClasses.Ajanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Ajanda");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.DepoClasses.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Depo");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.DepoClasses.DepoEnvanter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.ToTable("DepoEnvanter");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.DepoClasses.DepoHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("DepoRafId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.HasIndex("DepoRafId");

                    b.ToTable("DepoHareket");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.DepoClasses.DepoRaf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DepoRaf");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.DurusTipClasses.DurusTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DurusTip");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.Is", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("ErturIsNotu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("FaturaKesildiMi")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsBitimindeBildir")
                        .HasColumnType("bit");

                    b.Property<int>("IsOnceligi")
                        .HasColumnType("int");

                    b.Property<bool>("IslendiMi")
                        .HasColumnType("bit");

                    b.Property<string>("MuhasebeNotu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("MusteriSiparisNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("OgledenOnceTeslim")
                        .HasColumnType("bit");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("TeklifNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Teklifli")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Termin")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Is");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsDosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("DosyaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IsId");

                    b.ToTable("IsDosya");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsMalzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.Property<bool>("Iscilik")
                        .HasColumnType("bit");

                    b.Property<int>("KalinlikId")
                        .HasColumnType("int");

                    b.Property<string>("MalzemeNotu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MalzemeTipId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<bool>("UretimEmriVar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IsId");

                    b.HasIndex("KalinlikId");

                    b.HasIndex("MalzemeTipId");

                    b.ToTable("IsMalzeme");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsMalzemeUretimSurec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IsId")
                        .HasColumnType("int");

                    b.Property<int>("IsMalzemeId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("UretimSurecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsId");

                    b.HasIndex("IsMalzemeId");

                    b.HasIndex("UretimSurecId");

                    b.ToTable("IsMalzemeUretimSurec");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsMusteriTemsilcisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriTemsilciId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IsId");

                    b.HasIndex("MusteriTemsilciId");

                    b.ToTable("IsMusteriTemsilcisi");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.KalinlikClasses.Kalinlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Kalinlik");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MailParamsClasses.MailParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("EMailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SSLKullan")
                        .HasColumnType("bit");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailParams");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MakineClasses.Makine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Makine");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MalzemeTipClasses.MalzemeTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MalzemeTip");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriClasses.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MusteriSinifId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("VergiDairesi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VergiNumarasi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("MusteriSinifId");

                    b.ToTable("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriClasses.MusteriKisitlama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IslemAciklama")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Kisitla")
                        .HasColumnType("bit");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("MusteriKisitlama");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriClasses.MusteriTemsilci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MailAdresi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("MailBildirimiGonder")
                        .HasColumnType("bit");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<bool>("SmsBildirimiGonder")
                        .HasColumnType("bit");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("MusteriTemsilci");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriSinifClasses.MusteriSinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MusteriSinif");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.TedarikciClasses.Tedarikci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tedarikci");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.Uretim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MakineId")
                        .HasColumnType("int");

                    b.Property<int>("MalzemeTipId")
                        .HasColumnType("int");

                    b.Property<int>("MalzemeTransferDurum")
                        .HasColumnType("int");

                    b.Property<string>("Not")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UretimBaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UretimBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("UretimDurum")
                        .HasColumnType("int");

                    b.Property<string>("UretimKodu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MakineId");

                    b.HasIndex("MalzemeTipId");

                    b.ToTable("Uretim");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimDepoEnvanter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int>("DepoEnvanterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MalzemeAdedi")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("UretimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepoEnvanterId");

                    b.HasIndex("UretimId");

                    b.ToTable("UretimDepoEnvanter");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimDosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("DosyaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("UretimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UretimId");

                    b.ToTable("UretimDosya");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimDurus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DurusBaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DurusBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DurusSuresi")
                        .HasColumnType("int");

                    b.Property<int>("DurusTipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("UretimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DurusTipId");

                    b.HasIndex("UretimId");

                    b.ToTable("UretimDurus");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimIsMalzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<bool>("FaturaIslendi")
                        .HasColumnType("bit");

                    b.Property<bool>("FaturaKesildi")
                        .HasColumnType("bit");

                    b.Property<string>("FaturaNot")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FaturaTutari")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.Property<int>("IsMalzemeId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("UretimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsId");

                    b.HasIndex("IsMalzemeId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("UretimId");

                    b.ToTable("UretimIsMalzeme");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimUretimSurec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SurecBaslangic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SurecBitis")
                        .HasColumnType("datetime2");

                    b.Property<int>("UretimDurum")
                        .HasColumnType("int");

                    b.Property<int>("UretimId")
                        .HasColumnType("int");

                    b.Property<int>("UretimIsMalzemeId")
                        .HasColumnType("int");

                    b.Property<int>("UretimSurecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UretimId");

                    b.HasIndex("UretimIsMalzemeId");

                    b.HasIndex("UretimSurecId");

                    b.ToTable("UretimUretimSurec");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimSurecClasses.UretimSurec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncelleyenKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("KolonKalinlik")
                        .HasColumnType("bit");

                    b.Property<bool>("KolonMakine")
                        .HasColumnType("bit");

                    b.Property<bool>("KolonMusteri")
                        .HasColumnType("bit");

                    b.Property<bool>("KolonProgram")
                        .HasColumnType("bit");

                    b.Property<int>("OlusturanKullanciId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("RenkKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("SiraNo")
                        .HasColumnType("int");

                    b.Property<int>("SurecSayfaGorunumu")
                        .HasColumnType("int");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UretimSurec");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.AjandaClasses.Ajanda", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.MusteriClasses.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.DepoClasses.DepoEnvanter", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.DepoClasses.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Depo");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.DepoClasses.DepoHareket", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.DepoClasses.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.DepoClasses.DepoRaf", "DepoRaf")
                        .WithMany()
                        .HasForeignKey("DepoRafId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Depo");

                    b.Navigation("DepoRaf");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.Is", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.MusteriClasses.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsDosya", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.IsClasses.Is", "Is")
                        .WithMany("IsDosyalari")
                        .HasForeignKey("IsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Is");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsMalzeme", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.IsClasses.Is", "Is")
                        .WithMany("IsMalzemeleri")
                        .HasForeignKey("IsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.KalinlikClasses.Kalinlik", "Kalinlik")
                        .WithMany()
                        .HasForeignKey("KalinlikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.MalzemeTipClasses.MalzemeTip", "MalzemeTip")
                        .WithMany()
                        .HasForeignKey("MalzemeTipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Is");

                    b.Navigation("Kalinlik");

                    b.Navigation("MalzemeTip");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsMalzemeUretimSurec", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.IsClasses.Is", null)
                        .WithMany("IsMalzemeUretimSurec")
                        .HasForeignKey("IsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IsTakip.Core.Classes.IsClasses.IsMalzeme", "IsMalzeme")
                        .WithMany("IsMalzemeUretimSurec")
                        .HasForeignKey("IsMalzemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.UretimSurecClasses.UretimSurec", "UretimSurec")
                        .WithMany()
                        .HasForeignKey("UretimSurecId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IsMalzeme");

                    b.Navigation("UretimSurec");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsMusteriTemsilcisi", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.IsClasses.Is", "Is")
                        .WithMany("IsMusteriTemsilcisi")
                        .HasForeignKey("IsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.MusteriClasses.MusteriTemsilci", "MusteriTemsilci")
                        .WithMany()
                        .HasForeignKey("MusteriTemsilciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Is");

                    b.Navigation("MusteriTemsilci");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriClasses.Musteri", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.MusteriSinifClasses.MusteriSinif", "MusteriSinif")
                        .WithMany()
                        .HasForeignKey("MusteriSinifId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MusteriSinif");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriClasses.MusteriKisitlama", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.MusteriClasses.Musteri", "Musteri")
                        .WithMany("MusteriKisitlama")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriClasses.MusteriTemsilci", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.MusteriClasses.Musteri", "Musteri")
                        .WithMany("MusteriTemsilci")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.Uretim", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.MakineClasses.Makine", "Makine")
                        .WithMany()
                        .HasForeignKey("MakineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IsTakip.Core.Classes.MalzemeTipClasses.MalzemeTip", "MalzemeTip")
                        .WithMany()
                        .HasForeignKey("MalzemeTipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Makine");

                    b.Navigation("MalzemeTip");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimDepoEnvanter", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.DepoClasses.DepoEnvanter", "DepoEnvanter")
                        .WithMany()
                        .HasForeignKey("DepoEnvanterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.UretimClasses.Uretim", "Uretim")
                        .WithMany("UretimDepoEnvanter")
                        .HasForeignKey("UretimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DepoEnvanter");

                    b.Navigation("Uretim");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimDosya", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.UretimClasses.Uretim", "Uretim")
                        .WithMany("UretimDosya")
                        .HasForeignKey("UretimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Uretim");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimDurus", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.DurusTipClasses.DurusTip", "DurusTip")
                        .WithMany()
                        .HasForeignKey("DurusTipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.UretimClasses.Uretim", "Uretim")
                        .WithMany("UretimDurus")
                        .HasForeignKey("UretimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DurusTip");

                    b.Navigation("Uretim");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimIsMalzeme", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.IsClasses.Is", "Is")
                        .WithMany()
                        .HasForeignKey("IsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.IsClasses.IsMalzeme", "IsMalzeme")
                        .WithMany()
                        .HasForeignKey("IsMalzemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.MusteriClasses.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.UretimClasses.Uretim", "Uretim")
                        .WithMany("UretimIsMalzeme")
                        .HasForeignKey("UretimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Is");

                    b.Navigation("IsMalzeme");

                    b.Navigation("Musteri");

                    b.Navigation("Uretim");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.UretimUretimSurec", b =>
                {
                    b.HasOne("IsTakip.Core.Classes.UretimClasses.Uretim", "Uretim")
                        .WithMany("UretimUretimSurec")
                        .HasForeignKey("UretimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.UretimClasses.UretimIsMalzeme", "UretimIsMalzeme")
                        .WithMany()
                        .HasForeignKey("UretimIsMalzemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Classes.UretimSurecClasses.UretimSurec", "UretimSurec")
                        .WithMany()
                        .HasForeignKey("UretimSurecId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Uretim");

                    b.Navigation("UretimIsMalzeme");

                    b.Navigation("UretimSurec");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.Is", b =>
                {
                    b.Navigation("IsDosyalari");

                    b.Navigation("IsMalzemeUretimSurec");

                    b.Navigation("IsMalzemeleri");

                    b.Navigation("IsMusteriTemsilcisi");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.IsClasses.IsMalzeme", b =>
                {
                    b.Navigation("IsMalzemeUretimSurec");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.MusteriClasses.Musteri", b =>
                {
                    b.Navigation("MusteriKisitlama");

                    b.Navigation("MusteriTemsilci");
                });

            modelBuilder.Entity("IsTakip.Core.Classes.UretimClasses.Uretim", b =>
                {
                    b.Navigation("UretimDepoEnvanter");

                    b.Navigation("UretimDosya");

                    b.Navigation("UretimDurus");

                    b.Navigation("UretimIsMalzeme");

                    b.Navigation("UretimUretimSurec");
                });
#pragma warning restore 612, 618
        }
    }
}
