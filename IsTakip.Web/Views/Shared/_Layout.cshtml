@using IsTakip.Core.Enums;
@using IsTakip.Core.Result;
@using Microsoft.EntityFrameworkCore

<!DOCTYPE html>

<html lang="tr">
<head>
	<base href="">
	<title>İş Takip Portalı</title>
		<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta charset="utf-8" />
	<meta property="og:locale" content="tr_TR" />
	<meta property="og:type" content="article" />
	<link rel="shortcut icon" href="/Metronic/assets/media/logos/favicon.ico" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" />
	<link href="/Metronic/assets/plugins/custom/fullcalendar/fullcalendar.bundle.css" rel="stylesheet" type="text/css" />
	<link href="/Metronic/assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
	<link href="/Metronic/assets/css/style.bundle.css" rel="stylesheet" type="text/css" />
	<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
	<link href="/lib/fancybox/fancybox.css" rel="stylesheet" />
	<link href="~/css/site.css" rel="stylesheet" />
	<style>
		.toastr {
			opacity: 1 !important;
		}

		.toast {
			opacity: 1 !important;
		}
	</style>
</head>
<body id="kt_body" class="header-fixed header-tablet-and-mobile-fixed toolbar-enabled toolbar-fixed toolbar-tablet-and-mobile-fixed" onload="startTime()">
	<div class="d-flex flex-column flex-root">
		<div class="page d-flex flex-row flex-column-fluid">
			<div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">
				<div id="kt_header" style="" class="header align-items-stretch">
					<partial name="_Header" />
				</div>
				<div class="toolbar py-2" id="kt_toolbar">
					<div id="kt_toolbar_container" class="container-fluid d-flex align-items-center">
						<div class="flex-grow-1 flex-shrink-0 me-5">
							<div data-kt-swapper="true" data-kt-swapper-mode="prepend" data-kt-swapper-parent="{default: '#kt_content_container', 'lg': '#kt_toolbar_container'}" class="page-title d-flex align-items-center flex-wrap me-3 mb-5 mb-lg-0">
								<h1 class="d-flex align-items-center text-dark fw-bolder my-1 fs-3">
									<span class="h-20px border-gray-200 border-start ms-3 mx-2">Giriş Yapan Kullanıcı</span>
								</h1> (&nbsp;<small class="text-muted fs-4 fw-bold my-1 ms-1" id="saat"></small>&nbsp;)
							</div>
						</div>
					</div>
				</div>
				<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
					<div id="kt_content_container" class="container-fluid">
						@RenderBody()
					</div>
				</div>
				<div class="footer py-4 d-flex flex-lg-column" id="kt_footer">
					<partial name="_Footer" />
				</div>
			</div>
		</div>
	</div>

	<script src="/Metronic/assets/plugins/global/plugins.bundle.js"></script>
	<script src="/Metronic/assets/js/scripts.bundle.js"></script>
	<script src="/Metronic/assets/plugins/custom/fullcalendar/fullcalendar.bundle.js"></script>
	<!--end::Page Vendors Javascript-->
	<!--begin::Page Custom Javascript(used by this page)-->
	<script src="/Metronic/assets/js/custom/widgets.js"></script>
	<script src="/Metronic/assets/js/custom/apps/chat/chat.js"></script>
	<script src="/Metronic/assets/js/custom/modals/create-app.js"></script>
	<script src="/Metronic/assets/js/custom/modals/upgrade-plan.js"></script>
	<script src="/Metronic/assets/plugins/custom/datatables/datatables.bundle.js"></script>
	<script src="/js/jquery.blockUI.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
	<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<partial name="_ValidationScriptsPartial" />
	<script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
	<script src="~/lib/fancybox/fancybox.umd.js"></script>
	<script src="/js/site.js" asp-append-version="true"></script>

	@await RenderSectionAsync("Scripts", required: false)

	<script type="text/javascript">
			function startTime() {
				const today = new Date();
				let h = today.getHours();
				let m = today.getMinutes();
				let s = today.getSeconds();
				m = checkTime(m);
				s = checkTime(s);
				document.getElementById('saat').innerHTML =  h + ":" + m + ":" + s;
				setTimeout(startTime, 1000);
			}
			function checkTime(i) {
				if (i < 10) {i = "0" + i};  // add zero in front of numbers < 10
				return i;
			}

		@{
			if (ViewBag.Result != null)
			{
				var result = ViewBag.Result as ResultObject;

				switch (result.ResultStatus)
				{
					case ResultStatus.Success:
						<text>
																												toastr["success"]("@result.Mesaj", "İşlem başarılı");
						</text>

						if (!string.IsNullOrEmpty(result.Url))
						{
							<text>
																												setTimeout(function () { location.href = "@result.Url" }, 2000);
							</text>
						}
						break;
					case ResultStatus.Info:
						<text>
																												toastr["info"]("@result.Mesaj", "Bilgilendirme");
						</text>
						break;
					case ResultStatus.Warning:
						<text>
																												toastr["warning"]("@result.Mesaj", "Uyarı");
						</text>
						break;
					case ResultStatus.Error:
						<text>
																												toastr["error"]("@result.Mesaj", "Hata");
						</text>
						break;
					default:
						break;
				}
			}
		}
	</script>
</body>
</html>